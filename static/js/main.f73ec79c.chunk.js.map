{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","users","todo","className","href","find","user","TodoInfo","maxId","TodoList","todos","maxTodoId","Math","max","map","App","useState","selectedUser","setSelectedUser","setTitle","showTitlePrompt","setShowTitlePrompt","showUserPrompt","setShowUserPrompt","todosFromServer","setTodos","usersFromServer","resetForm","onSubmit","event","preventDefault","length","action","htmlFor","placeholder","type","value","onChange","target","test","disabled","onClick","selectedUserObject","Error","newTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f73ec79c.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { Todo } from '../../type/todo';\nimport { User } from '../../type/user';\n\ntype Props = {\n  users: Array<User>\n  todo: Todo\n};\n\nexport const UserInfo = ({ users, todo }: Props) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${users.find(user => user.id === todo.userId)?.email}`}>\n      {users?.find(user => user.id === todo.userId)?.name}\n    </a>\n  );\n};\n","import { Todo } from '../../type/todo';\nimport { User } from '../../type/user';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n  users: Array<User>\n  maxId: number\n};\n\nexport const TodoInfo = ({ todo, users, maxId }: Props) => {\n  return (\n    <article\n      data-id={maxId}\n      className={todo.completed\n        ? 'TodoInfo TodoInfo--completed'\n        : 'TodoInfo'}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      <UserInfo todo={todo} users={users} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../type/todo';\nimport { User } from '../../type/user';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Array<Todo>;\n  users: Array<User>;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, users }) => {\n  const maxTodoId = Math.max(...todos.map((todo) => todo.id));\n\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo\n          key={todo.id}\n          maxId={maxTodoId}\n          todo={todo}\n          users={users}\n        />\n      ))}\n    </section>\n  );\n};\n","import React, { FormEventHandler, useState } from 'react';\nimport { User } from './type/user';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './type/todo';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [selectedUser, setSelectedUser] = useState<string>('');\n  const [title, setTitle] = useState<string>('');\n  const [showTitlePrompt, setShowTitlePrompt] = useState<boolean>(false);\n  const [showUserPrompt, setShowUserPrompt] = useState<boolean>(false);\n  const [todos, setTodos] = useState<Array<Todo>>(todosFromServer);\n  const users: Array<User> = usersFromServer;\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (/^[0-9a-zA-Z\\s]+$/.test(value)) {\n      setTitle(value);\n      setShowTitlePrompt(false);\n    }\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setSelectedUser(value);\n    setShowUserPrompt(false);\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setSelectedUser('');\n  };\n\n  const handleFormSubmit: FormEventHandler = (event) => {\n    event.preventDefault();\n    if (title.length !== 0 && selectedUser !== '') {\n      resetForm();\n    }\n  };\n\n  const handleAddClick = () => {\n    if (title.length === 0) {\n      setShowTitlePrompt(true);\n    }\n\n    if (selectedUser === '') {\n      setShowUserPrompt(true);\n    }\n\n    if (title.length !== 0 && selectedUser !== '') {\n      const selectedUserObject\n       = users.find((user) => user.name === selectedUser);\n\n      if (selectedUserObject) {\n        const newTodo: Todo = {\n          id: todos.length + 1, // Automatyczne nadawanie nowego ID\n          title,\n          completed: false,\n          userId: selectedUserObject.id as number,\n        };\n\n        setTodos([...todos, newTodo]);\n        resetForm();\n      } else {\n        throw new Error('There is no such a User');\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={handleFormSubmit} action=\"/api/todos\">\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title:</label>\n          <input\n            placeholder=\"Enter a title\"\n            id=\"title\"\n            name=\"title\"\n            type=\"text\"\n            value={title}\n            data-cy=\"titleInput\"\n            onChange={handleTitleChange}\n          />\n          {showTitlePrompt\n           && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"selectUser\">User:</label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"selectUser\"\n            name=\"selectUser\"\n            value={selectedUser}\n            onChange={handleUserChange}\n          >\n            <option value=\"\" disabled>\n              Choose a user\n            </option>\n            {users.map((user) => (\n              <option key={user.id} value={user.name}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {showUserPrompt\n           && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\" onClick={handleAddClick}>\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} users={users} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}